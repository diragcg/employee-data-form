<!DOCTYPE html>
<html lang="hi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>संचालनालय कृषि छत्तीसगढ़ - डैशबोर्ड</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <!-- Mukta Devanagari Font -->
    <link href="https://fonts.googleapis.com/css2?family=Mukta:wght@200;300;400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
    <!-- Select2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        :root {
            /* Forest Green & Cream Theme */
            --primary-color: #1B5E20;     /* Dark Forest Green */
            --secondary-color: #388E3C;   /* Medium Green */
            --accent-color: #8BC34A;      /* Light Green */
            --text-dark: #263238;
            --text-medium: #455A64;
            --text-light: #FFF8E1;        /* Cream */
            --background-light: #FFF8E1;  /* Cream */
            --background-medium: #F1F8E9; /* Light Green-Cream */
            --border-color: #C8E6C9;      /* Light Green Border */
            --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
            --shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            --shadow-md: 0 6px 12px rgba(0, 0, 0, 0.15);
            --shadow-lg: 0 8px 24px rgba(27, 94, 32, 0.2);
        }

        body {
            font-family: 'Mukta', sans-serif;
            background-color: var(--background-light);
            min-height: 100vh;
        }

        .navbar {
            background-color: var(--primary-color);
            box-shadow: var(--shadow);
            padding: 12px 0;
        }

        .navbar-brand {
            font-weight: 700;
            color: var(--text-light);
            display: flex;
            align-items: center;
        }

        .navbar-brand img {
            height: 40px;
            margin-right: 12px;
        }

        .nav-link {
            color: rgba(255, 248, 225, 0.9) !important;
            font-weight: 600;
            padding: 12px 20px !important;
            margin: 0 5px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .nav-link:hover {
            color: var(--text-light) !important;
            background-color: rgba(255, 248, 225, 0.1);
        }

        .nav-link.active {
            color: var(--text-light) !important;
            background-color: rgba(255, 248, 225, 0.2);
        }

        .dropdown-menu {
            background-color: #FFFFFF;
            border: none;
            border-radius: 10px;
            box-shadow: var(--shadow-md);
            padding: 10px;
            margin-top: 10px;
        }

        .dropdown-item {
            padding: 8px 15px;
            border-radius: 6px;
            transition: all 0.2s;
            color: var(--text-dark);
        }

        .dropdown-item:hover {
            background-color: var(--background-medium);
            color: var(--primary-color);
        }

        .dropdown-item.active, 
        .dropdown-item:active {
            background-color: var(--primary-color);
            color: var(--text-light);
        }

        .main-content {
            padding: 30px 20px;
            margin-top: 20px;
        }

        .card {
            border: none;
            border-radius: 16px;
            box-shadow: var(--shadow);
            margin-bottom: 25px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background-color: #FFFFFF;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-md);
        }

        .card-header {
            background-color: var(--primary-color);
            color: var(--text-light);
            font-weight: 600;
            padding: 15px 20px;
            border-bottom: none;
        }

        .card-body {
            padding: 25px;
        }

        .card-title {
            color: var(--primary-color);
            font-weight: 700;
            margin-bottom: 15px;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            font-weight: 600;
            border-radius: 8px;
            padding: 10px 20px;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: var(--shadow-sm);
        }

        .btn-outline-primary {
            color: var(--primary-color);
            border-color: var(--primary-color);
            font-weight: 600;
            border-radius: 8px;
            padding: 10px 20px;
            transition: all 0.3s ease;
        }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            color: var(--text-light);
            transform: translateY(-2px);
            box-shadow: var(--shadow-sm);
        }

        .form-label {
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 8px;
        }

        .form-control {
            border-radius: 8px;
            border: 1px solid var(--border-color);
            padding: 12px 15px;
            transition: all 0.3s ease;
            background-color: #F9FBF7;
        }

        .form-control:focus {
            border-color: var(--secondary-color);
            background-color: #FFFFFF;
            box-shadow: 0 0 0 3px rgba(56, 142, 60, 0.15);
        }

        .alert {
            border-radius: 10px;
            font-weight: 500;
            padding: 16px;
            margin-bottom: 20px;
            box-shadow: var(--shadow-sm);
        }

        .alert-success {
            background-color: #E8F5E9;
            border-color: #C8E6C9;
            color: #2E7D32;
        }

        .alert-danger {
            background-color: #FFEBEE;
            border-color: #FFCDD2;
            color: #C62828;
        }

        /* Modal styles */
        .modal-content {
            border-radius: 16px;
            border: none;
            box-shadow: var(--shadow-lg);
            overflow: hidden;
        }

        .modal-header {
            background-color: var(--primary-color);
            color: var(--text-light);
            border-bottom: none;
            padding: 20px 30px;
        }

        .modal-title {
            font-weight: 700;
            font-size: 1.3rem;
        }

        .btn-close {
            filter: brightness(0) invert(1);
            opacity: 0.8;
        }

        .modal-body {
            padding: 30px;
            background-color: #FFFFFF;
        }

        .modal-footer {
            border-top: none;
            padding: 20px 30px;
            background-color: #FAFAFA;
        }

        /* Dashboard specific styles */
        .stat-card {
            text-align: center;
            padding: 20px;
        }

        .stat-icon {
            font-size: 2.5rem;
            color: var(--primary-color);
            margin-bottom: 15px;
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 5px;
        }

        .stat-label {
            color: var(--text-medium);
            font-size: 0.9rem;
        }

        /* Sidebar */
        .sidebar {
            background-color: #FFFFFF;
            border-radius: 16px;
            box-shadow: var(--shadow);
            padding: 20px 0;
            height: 100%;
        }

        .sidebar-link {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: var(--text-dark);
            text-decoration: none;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
            cursor: pointer;
        }

        .sidebar-link:hover {
            background-color: var(--background-medium);
            color: var(--primary-color);
            border-left-color: var(--primary-color);
        }

        .sidebar-link.active {
            background-color: var(--background-medium);
            color: var(--primary-color);
            border-left-color: var(--primary-color);
            font-weight: 600;
        }

        .sidebar-icon {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        /* Progress bar styling */
        .progress {
            height: 10px;
            border-radius: 5px;
            margin-bottom: 15px;
            background-color: #E0E0E0;
        }

        .progress-bar {
            background-color: var(--primary-color);
        }

        /* Tab styling */
        .nav-tabs {
            border-bottom: 1px solid var(--border-color);
            margin-bottom: 20px;
        }

        .nav-tabs .nav-link {
            border: none;
            border-bottom: 3px solid transparent;
            border-radius: 0;
            font-weight: 600;
            color: var(--text-medium) !important;
            padding: 10px 20px !important;
            margin-bottom: -1px;
        }

        .nav-tabs .nav-link:hover {
            border-color: transparent;
            color: var(--primary-color) !important;
        }

        .nav-tabs .nav-link.active {
            border-color: var(--primary-color);
            color: var(--primary-color) !important;
            background-color: transparent;
        }

        /* Table styling */
        .table {
            border-collapse: separate;
            border-spacing: 0;
            width: 100%;
        }

        .table th {
            background-color: var(--background-medium);
            color: var(--primary-color);
            font-weight: 600;
            border: none;
            padding: 12px 15px;
        }

        .table td {
            border-top: 1px solid var(--border-color);
            padding: 12px 15px;
            vertical-align: middle;
        }

        .table tr:hover {
            background-color: rgba(241, 248, 233, 0.5);
        }

        /* Action buttons */
        .action-btn {
            width: 32px;
            height: 32px;
            border-radius: 4px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin: 0 3px;
            cursor: pointer;
            transition: all 0.2s;
        }

        .edit-btn {
            background-color: #FFF8E1;
            color: #FFA000;
        }

        .edit-btn:hover {
            background-color: #FFA000;
            color: white;
        }

        .delete-btn {
            background-color: #FFEBEE;
            color: #D32F2F;
        }

        .delete-btn:hover {
            background-color: #D32F2F;
            color: white;
        }

        .view-btn {
            background-color: #E8F5E9;
            color: #388E3C;
        }

        .view-btn:hover {
            background-color: #388E3C;
            color: white;
        }

        /* Division and district styling */
        .division-header {
            background-color: #E8F5E9;
            color: var(--primary-color);
            padding: 10px 15px;
            font-weight: 600;
            border-radius: 8px;
            margin-bottom: 10px;
        }

        .district-item {
            padding: 10px 15px;
            margin: 5px 0;
            border-radius: 8px;
            transition: all 0.2s;
            cursor: pointer;
        }

        .district-item:hover {
            background-color: var(--background-medium);
        }

        .district-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        /* Select2 customization */
        .select2-container--default .select2-selection--single {
            height: 48px;
            padding: 10px 15px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 46px;
        }

        /* DataTables customization */
        .dataTables_wrapper .dataTables_filter input {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 8px 12px;
        }

        .dataTables_wrapper .dataTables_length select {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 5px 10px;
        }

        /* Profile section */
        .profile-info {
            padding: 20px;
            border-radius: 10px;
            background-color: #FFFFFF;
            box-shadow: var(--shadow);
            margin-bottom: 20px;
        }

        .profile-info-item {
            display: flex;
            margin-bottom: 15px;
            align-items: center;
        }

        .profile-info-label {
            font-weight: 600;
            width: 150px;
            color: var(--text-medium);
        }

        .profile-info-value {
            flex: 1;
            color: var(--text-dark);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                margin-bottom: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="#">
                <img src="https://upload.wikimedia.org/wikipedia/commons/5/55/Emblem_of_India.svg" alt="भारत सरकार">
                <span>संचालनालय कृषि छत्तीसगढ़</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="#" id="dashboardLink">
                            <i class="fas fa-home me-1"></i> डैशबोर्ड
                        </a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            <i class="fas fa-user me-1"></i> <span id="userNameDisplay">उपयोगकर्ता</span>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item sidebar-link" data-section="profile">
                                <i class="fas fa-id-card me-1"></i> प्रोफ़ाइल
                            </a></li>
                            <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                                <i class="fas fa-key me-1"></i> पासवर्ड बदलें
                            </a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#" id="logoutBtn">
                                <i class="fas fa-sign-out-alt me-1"></i> लॉगआउट
                            </a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container main-content">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3 mb-4">
                <div class="sidebar">
                    <div class="sidebar-link" data-section="dashboard">
                        <span class="sidebar-icon"><i class="fas fa-home"></i></span>
                        डैशबोर्ड
                    </div>
                    <div class="sidebar-link" data-section="crop-assessment">
                        <span class="sidebar-icon"><i class="fas fa-seedling"></i></span>
                        फसल आकलन
                    </div>
                    <div class="sidebar-link" data-section="ground-truth">
                        <span class="sidebar-icon"><i class="fas fa-map-marked-alt"></i></span>
                        ग्राउंड ट्रुथ सर्वेक्षण
                    </div>
                    <div class="sidebar-link" data-section="officers-training">
                        <span class="sidebar-icon"><i class="fas fa-user-tie"></i></span>
                        अधिकारी प्रशिक्षण
                    </div>
                    <div class="sidebar-link" data-section="profile">
                        <span class="sidebar-icon"><i class="fas fa-id-card"></i></span>
                        प्रोफ़ाइल
                    </div>
                    
                    <hr class="my-3">
                    
                    <div class="px-3 mb-2">
                        <label class="form-label">जिला चुनें</label>
                        <select class="form-select" id="districtSelector">
                            <option value="">-- जिला चुनें --</option>
                            <option value="रायपुर">रायपुर</option>
                            <option value="गरियाबंद">गरियाबंद</option>
                            <option value="बलौदाबाजार">बलौदाबाजार</option>
                            <option value="महासमुंद">महासमुंद</option>
                            <option value="धमतरी">धमतरी</option>
                            <option value="दुर्ग">दुर्ग</option>
                            <option value="बालोद">बालोद</option>
                            <option value="बेमेतरा">बेमेतरा</option>
                            <option value="कबीरधाम">कबीरधाम</option>
                            <option value="राजनांदगांव">राजनांदगांव</option>
                            <option value="खैरागढ़">खैरागढ़</option>
                            <option value="मोहला">मोहला</option>
                            <option value="बिलासपुर">बिलासपुर</option>
                            <option value="गौरेला-पेण्ड्रा-मरवाही">गौरेला-पेण्ड्रा-मरवाही</option>
                            <option value="मुंगेली">मुंगेली</option>
                            <option value="जांजगीर">जांजगीर</option>
                            <option value="सक्ती">सक्ती</option>
                            <option value="कोरबा">कोरबा</option>
                            <option value="रायगढ़">रायगढ़</option>
                            <option value="सारंगढ़-बिलाईगढ़">सारंगढ़-बिलाईगढ़</option>
                            <option value="सरगुजा">सरगुजा</option>
                            <option value="सूरजपुर">सूरजपुर</option>
                            <option value="बलरामपुर">बलरामपुर</option>
                            <option value="कोरिया">कोरिया</option>
                            <option value="मनेन्द्रगढ़-चिरमिरी">मनेन्द्रगढ़-चिरमिरी</option>
                            <option value="जशपुर">जशपुर</option>
                            <option value="जगदलपुर">जगदलपुर</option>
                            <option value="कोण्डागांव">कोण्डागांव</option>
                            <option value="कांकेर">कांकेर</option>
                            <option value="दंतेवाड़ा">दंतेवाड़ा</option>
                            <option value="सुकमा">सुकमा</option>
                            <option value="बीजापुर">बीजापुर</option>
                            <option value="नारायणपुर">नारायणपुर</option>
                        </select>
                    </div>
                    
                    <div class="px-3">
                        <label class="form-label">संभाग</label>
                        <div class="division-header">रायपुर संभाग</div>
                        <div class="division-header">दुर्ग संभाग</div>
                        <div class="division-header">बिलासपुर संभाग</div>
                        <div class="division-header">सरगुजा संभाग</div>
                        <div class="division-header">बस्तर संभाग</div>
                    </div>
                </div>
            </div>
            
            <!-- Main Dashboard Content -->
            <div class="col-md-9">
                <!-- Dashboard Section -->
                <div id="dashboard-section" class="content-section">
                    <div class="alert alert-success" id="welcomeAlert">
                        <i class="fas fa-check-circle me-2"></i>
                        आप सफलतापूर्वक लॉगिन कर चुके हैं।
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <i class="fas fa-home me-2"></i> स्वागत है
                        </div>
                        <div class="card-body">
                            <h5 class="card-title" id="welcomeMessage">आपका स्वागत है!</h5>
                            <p class="card-text">संचालनालय कृषि छत्तीसगढ़ के डैशबोर्ड में आपका स्वागत है। यहां आप फसल आकलन, ग्राउंड ट्रुथ सर्वेक्षण और अधिकारी प्रशिक्षण डेटा का प्रबंधन कर सकते हैं।</p>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-4">
                            <div class="card stat-card">
                                <div class="stat-icon">
                                    <i class="fas fa-seedling"></i>
                                </div>
                                <div class="stat-value" id="totalCropAssessments">0</div>
                                <div class="stat-label">कुल फसल आकलन</div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-4">
                            <div class="card stat-card">
                                <div class="stat-icon">
                                    <i class="fas fa-map-marked-alt"></i>
                                </div>
                                <div class="stat-value" id="totalGroundTruthSurveys">0</div>
                                <div class="stat-label">कुल ग्राउंड ट्रुथ सर्वेक्षण</div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-4">
                            <div class="card stat-card">
                                <div class="stat-icon">
                                    <i class="fas fa-user-tie"></i>
                                </div>
                                <div class="stat-value" id="totalOfficersTrainings">0</div>
                                <div class="stat-label">कुल अधिकारी प्रशिक्षण</div>
                            </div>
                        </div>
                    </div>

                    <div class="card mb-4">
                        <div class="card-header">
                            <i class="fas fa-chart-bar me-2"></i> सर्वेक्षण प्रगति
                        </div>
                        <div class="card-body">
                            <h6 class="mb-3">फसल आकलन प्रगति</h6>
                            <div class="progress mb-4">
                                <div class="progress-bar" role="progressbar" style="width: 65%;" aria-valuenow="65" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            
                            <h6 class="mb-3">ग्राउंड ट्रुथ सर्वेक्षण प्रगति</h6>
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width: 40%;" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header">
                            <i class="fas fa-bell me-2"></i> हाल की गतिविधियां
                        </div>
                        <div class="card-body p-0">
                            <ul class="list-group list-group-flush" id="recentActivitiesList">
                                <!-- Activities will be loaded here -->
                            </ul>
                        </div>
                    </div>
                </div>
                
                <!-- Crop Assessment Section -->
                <div id="crop-assessment-section" class="content-section" style="display: none;">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h4 class="mb-0">फसल आकलन</h4>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#cropAssessmentModal">
                            <i class="fas fa-plus me-1"></i> नया आकलन जोड़ें
                        </button>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <i class="fas fa-filter me-2"></i> फिल्टर
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">जिला</label>
                                    <select class="form-select" id="cropAssessmentDistrictFilter">
                                        <option value="">सभी</option>
                                        <!-- Districts will be loaded here -->
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">ब्लॉक</label>
                                    <select class="form-select" id="cropAssessmentBlockFilter">
                                        <option value="">सभी</option>
                                        <!-- Blocks will be loaded here -->
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">आकलन तिथि</label>
                                    <input type="date" class="form-control" id="cropAssessmentDateFilter">
                                </div>
                            </div>
                            <div class="text-end">
                                <button class="btn btn-outline-primary" id="cropAssessmentFilterBtn">
                                    <i class="fas fa-search me-1"></i> खोजें
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <i class="fas fa-seedling me-2"></i> फसल आकलन डेटा
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table" id="cropAssessmentTable">
                                    <thead>
                                        <tr>
                                            <th>क्र.</th>
                                            <th>संभाग</th>
                                            <th>जिला</th>
                                            <th>ब्लॉक</th>
                                            <th>गांव</th>
                                            <th>टीम नंबर</th>
                                            <th>आकलन तिथि</th>
                                            <th>कुल सर्वेक्षण</th>
                                            <th>पूर्ण सर्वेक्षण</th>
                                            <th>कार्रवाई</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Data will be loaded here -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Ground Truth Survey Section -->
                <div id="ground-truth-section" class="content-section" style="display: none;">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h4 class="mb-0">ग्राउंड ट्रुथ सर्वेक्षण</h4>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#groundTruthModal">
                            <i class="fas fa-plus me-1"></i> नया सर्वेक्षण जोड़ें
                        </button>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <i class="fas fa-filter me-2"></i> फिल्टर
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">संभाग</label>
                                    <select class="form-select" id="groundTruthDivisionFilter">
                                        <option value="">सभी</option>
                                        <option value="रायपुर संभाग">रायपुर संभाग</option>
                                        <option value="दुर्ग संभाग">दुर्ग संभाग</option>
                                        <option value="बिलासपुर संभाग">बिलासपुर संभाग</option>
                                        <option value="सरगुजा संभाग">सरगुजा संभाग</option>
                                        <option value="बस्तर संभाग">बस्तर संभाग</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">टीम नंबर</label>
                                    <input type="number" class="form-control" id="groundTruthTeamFilter">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">सर्वेक्षण तिथि</label>
                                    <input type="date" class="form-control" id="groundTruthDateFilter">
                                </div>
                            </div>
                            <div class="text-end">
                                <button class="btn btn-outline-primary" id="groundTruthFilterBtn">
                                    <i class="fas fa-search me-1"></i> खोजें
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <i class="fas fa-map-marked-alt me-2"></i> ग्राउंड ट्रुथ सर्वेक्षण डेटा
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table" id="groundTruthTable">
                                    <thead>
                                        <tr>
                                            <th>क्र.</th>
                                            <th>संभाग</th>
                                            <th>टीम नंबर</th>
                                            <th>अधिकारी नाम</th>
                                            <th>सर्वेक्षण तिथि</th>
                                            <th>कुल सर्वेक्षण</th>
                                            <th>खर्च राशि</th>
                                            <th>कुल मांग</th>
                                            <th>पूर्ण सर्वेक्षण</th>
                                            <th>कार्रवाई</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Data will be loaded here -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Officers Training Section -->
                <div id="officers-training-section" class="content-section" style="display: none;">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h4 class="mb-0">अधिकारी प्रशिक्षण</h4>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#officersTrainingModal">
                            <i class="fas fa-plus me-1"></i> नया प्रशिक्षण जोड़ें
                        </button>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <i class="fas fa-filter me-2"></i> फिल्टर
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3 mb-3">
                                    <label class="form-label">जिला</label>
                                    <select class="form-select" id="officersTrainingDistrictFilter">
                                        <option value="">सभी</option>
                                        <!-- Districts will be loaded here -->
                                    </select>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="form-label">ब्लॉक</label>
                                    <select class="form-select" id="officersTrainingBlockFilter">
                                        <option value="">सभी</option>
                                        <!-- Blocks will be loaded here -->
                                    </select>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="form-label">प्रशिक्षण स्थिति</label>
                                    <select class="form-select" id="officersTrainingStatusFilter">
                                        <option value="">सभी</option>
                                        <option value="Pending">लंबित</option>
                                        <option value="Completed">पूर्ण</option>
                                        <option value="In Progress">प्रगति में</option>
                                    </select>
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="form-label">प्रशिक्षण तिथि</label>
                                    <input type="date" class="form-control" id="officersTrainingDateFilter">
                                </div>
                            </div>
                            <div class="text-end">
                                <button class="btn btn-outline-primary" id="officersTrainingFilterBtn">
                                    <i class="fas fa-search me-1"></i> खोजें
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <i class="fas fa-user-tie me-2"></i> अधिकारी प्रशिक्षण डेटा
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table" id="officersTrainingTable">
                                    <thead>
                                        <tr>
                                            <th>क्र.</th>
                                            <th>अधिकारी नाम</th>
                                            <th>पद</th>
                                            <th>जिला</th>
                                            <th>ब्लॉक</th>
                                            <th>मोबाइल नंबर</th>
                                            <th>प्रशिक्षण स्थिति</th>
                                            <th>प्रशिक्षण तिथि</th>
                                            <th>कार्रवाई</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Data will be loaded here -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Profile Section -->
                <div id="profile-section" class="content-section" style="display: none;">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h4 class="mb-0">मेरी प्रोफ़ाइल</h4>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                            <i class="fas fa-edit me-1"></i> प्रोफ़ाइल संपादित करें
                        </button>
                    </div>
                    
                    <div class="alert alert-success" id="profileAlert" style="display: none;"></div>
                    
                    <div class="card">
                        <div class="card-header">
                            <i class="fas fa-id-card me-2"></i> प्रोफ़ाइल विवरण
                        </div>
                        <div class="card-body">
                            <div class="profile-info">
                                <div class="profile-info-item">
                                    <div class="profile-info-label">उपयोगकर्ता नाम</div>
                                    <div class="profile-info-value" id="profileUsername"></div>
                                </div>
                                <div class="profile-info-item">
                                    <div class="profile-info-label">पूरा नाम</div>
                                    <div class="profile-info-value" id="profileFullName"></div>
                                </div>
                                <div class="profile-info-item">
                                    <div class="profile-info-label">भूमिका</div>
                                    <div class="profile-info-value" id="profileRole"></div>
                                </div>
                                <div class="profile-info-item">
                                    <div class="profile-info-label">मोबाइल नंबर</div>
                                    <div class="profile-info-value" id="profileMobile"></div>
                                </div>
                                <div class="profile-info-item">
                                    <div class="profile-info-label">ईमेल</div>
                                    <div class="profile-info-value" id="profileEmail"></div>
                                </div>
                                <div class="profile-info-item">
                                    <div class="profile-info-label">अंतिम लॉगिन</div>
                                    <div class="profile-info-value" id="profileLastLogin"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card mt-4">
                        <div class="card-header">
                            <i class="fas fa-shield-alt me-2"></i> सुरक्षा
                        </div>
                        <div class="card-body">
                            <p>अपना पासवर्ड नियमित रूप से बदलें और अपने खाते की सुरक्षा सुनिश्चित करें।</p>
                            <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                                <i class="fas fa-key me-1"></i> पासवर्ड बदलें
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Crop Assessment Modal -->
    <div class="modal fade" id="cropAssessmentModal" tabindex="-1" aria-labelledby="cropAssessmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cropAssessmentModalLabel">नया फसल आकलन</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="cropAssessmentAlert" class="alert" style="display: none;"></div>
                    <form id="cropAssessmentForm">
                        <input type="hidden" id="cropAssessmentId">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="cropDivisionName" class="form-label">संभाग</label>
                                <select class="form-select" id="cropDivisionName" required>
                                    <option value="">-- संभाग चुनें --</option>
                                    <option value="रायपुर संभाग">रायपुर संभाग</option>
                                    <option value="दुर्ग संभाग">दुर्ग संभाग</option>
                                    <option value="बिलासपुर संभाग">बिलासपुर संभाग</option>
                                    <option value="सरगुजा संभाग">सरगुजा संभाग</option>
                                    <option value="बस्तर संभाग">बस्तर संभाग</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="cropTeamNumber" class="form-label">टीम नंबर</label>
                                <input type="number" class="form-control" id="cropTeamNumber" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="cropOfficerNames" class="form-label">अधिकारी नाम</label>
                            <input type="text" class="form-control" id="cropOfficerNames" required>
                        </div>
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="cropDistrictName" class="form-label">जिला</label>
                                <select class="form-select" id="cropDistrictName" required>
                                    <option value="">-- जिला चुनें --</option>
                                    <!-- Districts will be loaded here -->
                                </select>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="cropBlockName" class="form-label">ब्लॉक</label>
                                <select class="form-select" id="cropBlockName" required>
                                    <option value="">-- ब्लॉक चुनें --</option>
                                    <!-- Blocks will be loaded here -->
                                </select>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="cropVillageName" class="form-label">गांव</label>
                                <input type="text" class="form-control" id="cropVillageName" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="cropIrrigationStatus" class="form-label">फसल सिंचाई स्थिति</label>
                            <select class="form-select" id="cropIrrigationStatus" required>
                                <option value="">-- स्थिति चुनें --</option>
                                <option value="सिंचित">सिंचित</option>
                                <option value="असिंचित">असिंचित</option>
                                <option value="आंशिक सिंचित">आंशिक सिंचित</option>
                            </select>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="cropTotalSurveys" class="form-label">कुल सर्वेक्षण</label>
                                <input type="number" class="form-control" id="cropTotalSurveys" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="cropCompletedSurveys" class="form-label">पूर्ण सर्वेक्षण</label>
                                <input type="number" class="form-control" id="cropCompletedSurveys" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="cropAssessmentDate" class="form-label">आकलन तिथि</label>
                            <input type="date" class="form-control" id="cropAssessmentDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="cropRemarks" class="form-label">टिप्पणियां</label>
                            <textarea class="form-control" id="cropRemarks" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">रद्द करें</button>
                    <button type="button" class="btn btn-primary" id="saveCropAssessmentBtn">सहेजें</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Ground Truth Survey Modal -->
    <div class="modal fade" id="groundTruthModal" tabindex="-1" aria-labelledby="groundTruthModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="groundTruthModalLabel">नया ग्राउंड ट्रुथ सर्वेक्षण</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="groundTruthAlert" class="alert" style="display: none;"></div>
                    <form id="groundTruthForm">
                        <input type="hidden" id="groundTruthId">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="groundTruthDivisionName" class="form-label">संभाग</label>
                                <select class="form-select" id="groundTruthDivisionName" required>
                                    <option value="">-- संभाग चुनें --</option>
                                    <option value="रायपुर संभाग">रायपुर संभाग</option>
                                    <option value="दुर्ग संभाग">दुर्ग संभाग</option>
                                    <option value="बिलासपुर संभाग">बिलासपुर संभाग</option>
                                    <option value="सरगुजा संभाग">सरगुजा संभाग</option>
                                    <option value="बस्तर संभाग">बस्तर संभाग</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="groundTruthTeamNumber" class="form-label">टीम नंबर</label>
                                <input type="number" class="form-control" id="groundTruthTeamNumber" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="groundTruthOfficerNames" class="form-label">अधिकारी नाम</label>
                            <input type="text" class="form-control" id="groundTruthOfficerNames" required>
                        </div>
                        <div class="mb-3">
                            <label for="groundTruthSurveyDate" class="form-label">सर्वेक्षण तिथि</label>
                            <input type="date" class="form-control" id="groundTruthSurveyDate" required>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="groundTruthTotalSurveys" class="form-label">कुल सर्वेक्षण</label>
                                <input type="number" class="form-control" id="groundTruthTotalSurveys" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="groundTruthExpenditureAmount" class="form-label">खर्च राशि</label>
                                <input type="number" step="0.01" class="form-control" id="groundTruthExpenditureAmount" required>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="groundTruthTotalAmountDemanded" class="form-label">कुल मांग राशि</label>
                                <input type="number" step="0.01" class="form-control" id="groundTruthTotalAmountDemanded" required>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="groundTruthTotalCropSurveys" class="form-label">कुल फसल सर्वेक्षण</label>
                                <input type="number" class="form-control" id="groundTruthTotalCropSurveys" required>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="groundTruthCompletedSurveys" class="form-label">पूर्ण सर्वेक्षण</label>
                                <input type="number" class="form-control" id="groundTruthCompletedSurveys" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="groundTruthRemarks" class="form-label">टिप्पणियां</label>
                            <textarea class="form-control" id="groundTruthRemarks" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">रद्द करें</button>
                    <button type="button" class="btn btn-primary" id="saveGroundTruthBtn">सहेजें</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Officers Training Modal -->
    <div class="modal fade" id="officersTrainingModal" tabindex="-1" aria-labelledby="officersTrainingModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="officersTrainingModalLabel">नया अधिकारी प्रशिक्षण</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="officersTrainingAlert" class="alert" style="display: none;"></div>
                    <form id="officersTrainingForm">
                        <input type="hidden" id="officersTrainingId">
                        <div class="mb-3">
                            <label for="officerName" class="form-label">अधिकारी नाम</label>
                            <input type="text" class="form-control" id="officerName" required>
                        </div>
                        <div class="mb-3">
                            <label for="officerDesignation" class="form-label">पद</label>
                            <input type="text" class="form-control" id="officerDesignation" required>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="officerDistrictName" class="form-label">जिला</label>
                                <select class="form-select" id="officerDistrictName" required>
                                    <option value="">-- जिला चुनें --</option>
                                    <!-- Districts will be loaded here -->
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="officerBlockName" class="form-label">ब्लॉक</label>
                                <select class="form-select" id="officerBlockName" required>
                                    <option value="">-- ब्लॉक चुनें --</option>
                                    <!-- Blocks will be loaded here -->
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="officerMobileNumber" class="form-label">मोबाइल नंबर</label>
                                <input type="tel" class="form-control" id="officerMobileNumber" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="officerEmail" class="form-label">ईमेल</label>
                                <input type="email" class="form-control" id="officerEmail">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="officerTrainingStatus" class="form-label">प्रशिक्षण स्थिति</label>
                                <select class="form-select" id="officerTrainingStatus">
                                    <option value="Pending">लंबित</option>
                                    <option value="Completed">पूर्ण</option>
                                    <option value="In Progress">प्रगति में</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="officerTrainingDate" class="form-label">प्रशिक्षण तिथि</label>
                                <input type="date" class="form-control" id="officerTrainingDate">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="officerRemarks" class="form-label">टिप्पणियां</label>
                            <textarea class="form-control" id="officerRemarks" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">रद्द करें</button>
                    <button type="button" class="btn btn-primary" id="saveOfficersTrainingBtn">सहेजें</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Profile Modal -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProfileModalLabel">प्रोफ़ाइल संपादित करें</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="editProfileAlert" class="alert" style="display: none;"></div>
                    <form id="editProfileForm">
                        <div class="mb-3">
                            <label for="editUsername" class="form-label">उपयोगकर्ता नाम</label>
                            <input type="text" class="form-control" id="editUsername" disabled readonly>
                            <small class="text-muted">उपयोगकर्ता नाम बदला नहीं जा सकता</small>
                        </div>
                        <div class="mb-3">
                            <label for="editFullName" class="form-label">पूरा नाम</label>
                            <input type="text" class="form-control" id="editFullName" required>
                        </div>
                        <div class="mb-3">
                            <label for="editMobileNumber" class="form-label">मोबाइल नंबर</label>
                            <input type="tel" class="form-control" id="editMobileNumber">
                        </div>
                        <div class="mb-3">
                            <label for="editEmail" class="form-label">ईमेल</label>
                            <input type="email" class="form-control" id="editEmail">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">रद्द करें</button>
                    <button type="button" class="btn btn-primary" id="saveProfileBtn">सहेजें</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Change Password Modal -->
    <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="changePasswordModalLabel">पासवर्ड बदलें</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="changePasswordAlert" class="alert" style="display: none;"></div>
                    <form id="changePasswordForm">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">वर्तमान पासवर्ड</label>
                            <input type="password" class="form-control" id="currentPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">नया पासवर्ड</label>
                            <input type="password" class="form-control" id="newPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">पासवर्ड की पुष्टि करें</label>
                            <input type="password" class="form-control" id="confirmPassword" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">रद्द करें</button>
                    <button type="button" class="btn btn-primary" id="changePasswordBtn">पासवर्ड बदलें</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">पुष्टि करें</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>क्या आप वाकई इस रिकॉर्ड को हटाना चाहते हैं?</p>
                    <input type="hidden" id="deleteRecordId">
                    <input type="hidden" id="deleteRecordType">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">रद्द करें</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">हटाएं</button>
                </div>
            </div>
        </div>
    </div>

    <footer class="mt-5 mb-3 text-center text-muted">
        <small>संचालनालय कृषि छत्तीसगढ़ © 2025 | वर्शन 1.0.0</small>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <!-- Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <!-- Supabase JS -->
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2.38.4/dist/umd/supabase.min.js"></script>
    <script>
        // Supabase configuration
        const supabaseUrl = 'https://txjbfqrbbtvzlxpeegkv.supabase.co';
        const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR4amJmcXJiYnR2emx4cGVlZ2t2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMxMTU2NTQsImV4cCI6MjA2ODY5MTY1NH0.sE5UbwEOSnd9ED-k_Ix5OfdZbf7dmwlHZSjQQrEAyCo';
        
        // Initialize Supabase client
        const { createClient } = supabase;
        const supabaseClient = createClient(supabaseUrl, supabaseKey);

        // Global variables
        let cropAssessmentTable;
        let groundTruthTable;
        let officersTrainingTable;
        let currentUser;
        let userDistricts = [];
        
        // Districts and blocks mapping
        const districtsAndBlocks = {
            "रायपुर": ["रायपुर", "आरंग", "अभनपुर", "तिल्दा"],
            "गरियाबंद": ["गरियाबंद", "छुरा", "मैनपुर", "देवभोग"],
            "बलौदाबाजार": ["बलौदाबाजार", "पलारी", "कसडोल", "भाटापारा"],
            "महासमुंद": ["महासमुंद", "बागबाहरा", "पिथौरा", "सराईपाली"],
            "धमतरी": ["धमतरी", "कुरूद", "मगरलोड", "नगरी"],
            "दुर्ग": ["दुर्ग", "पाटन", "धमधा"],
            "बालोद": ["बालोद", "गुंडरदेही", "डौंडीलोहारा"],
            "बेमेतरा": ["बेमेतरा", "नवागढ़", "साजा"],
            "कबीरधाम": ["कवर्धा", "बोडला", "पंडरिया"],
            "राजनांदगांव": ["राजनांदगांव", "छुईखदान", "डोंगरगढ़", "खैरागढ़"],
            "खैरागढ़": ["खैरागढ़", "छुईखदान", "गंडई"],
            "मोहला": ["मोहला", "मानपुर", "अंतागढ़"],
            "बिलासपुर": ["बिलासपुर", "मस्तूरी", "तखतपुर"],
            "गौरेला-पेण्ड्रा-मरवाही": ["गौरेला", "पेण्ड्रा", "मरवाही"],
            "मुंगेली": ["मुंगेली", "लोरमी", "पथरिया"],
            "जांजगीर": ["जांजगीर", "पामगढ़", "सक्ती", "अकलतरा"],
            "सक्ती": ["सक्ती", "डभरा", "बम्हनीडीह"],
            "कोरबा": ["कोरबा", "कटघोरा", "पाली"],
            "रायगढ़": ["रायगढ़", "पुसौर", "सारंगढ़", "खरसिया"],
            "सारंगढ़-बिलाईगढ़": ["सारंगढ़", "बिलाईगढ़"],
            "सरगुजा": ["अंबिकापुर", "सीतापुर", "लुण्ड्रा"],
            "सूरजपुर": ["सूरजपुर", "प्रेमनगर", "ओड़गी"],
            "बलरामपुर": ["बलरामपुर", "रामानुजगंज", "कुसमी"],
            "कोरिया": ["बैकुंठपुर", "सोनहत", "मनेन्द्रगढ़"],
            "मनेन्द्रगढ़-चिरमिरी": ["मनेन्द्रगढ़", "चिरमिरी", "भरतपुर"],
            "जशपुर": ["जशपुर", "कुनकुरी", "पत्थलगांव"],
            "जगदलपुर": ["जगदलपुर", "बस्तर", "लोहंडीगुड़ा"],
            "कोण्डागांव": ["कोण्डागांव", "केशकाल", "फरसगांव"],
            "कांकेर": ["कांकेर", "चारामा", "नरहरपुर"],
            "दंतेवाड़ा": ["दंतेवाड़ा", "गीदम"],
            "सुकमा": ["सुकमा", "कोंटा"],
            "बीजापुर": ["बीजापुर", "भोपालपट्टनम", "उसूर"],
            "नारायणपुर": ["नारायणपुर", "ओरछा"]
        };
        
        // Division to districts mapping
        const divisionToDistricts = {
            "रायपुर संभाग": ["रायपुर", "गरियाबंद", "बलौदाबाजार", "महासमुंद", "धमतरी"],
            "दुर्ग संभाग": ["दुर्ग", "बालोद", "बेमेतरा", "कबीरधाम", "राजनांदगांव", "खैरागढ़", "मोहला"],
            "बिलासपुर संभाग": ["बिलासपुर", "गौरेला-पेण्ड्रा-मरवाही", "मुंगेली", "जांजगीर", "सक्ती", "कोरबा", "रायगढ़", "सारंगढ़-बिलाईगढ़"],
            "सरगुजा संभाग": ["सरगुजा", "सूरजपुर", "बलरामपुर", "कोरिया", "मनेन्द्रगढ़-चिरमिरी", "जशपुर"],
            "बस्तर संभाग": ["जगदलपुर", "कोण्डागांव", "कांकेर", "दंतेवाड़ा", "सुकमा", "बीजापुर", "नारायणपुर"]
        };

        // Function to show alerts
        function showAlert(element, message, type) {
            element.textContent = message;
            element.className = `alert alert-\${type}`;
            element.style.display = 'block';
            
            // Auto hide after 5 seconds
            setTimeout(() => {
                element.style.display = 'none';
            }, 5000);
        }

        // Function to get user's allowed districts based on role and division
        async function getUserDistricts() {
            try {
                if (currentUser.role === 'super_admin') {
                    // Super admin can access all districts
                    return Object.keys(districtsAndBlocks);
                } else if (currentUser.role === 'division_admin') {
                    // Get the division from the user's full name
                    const divisionMatch = currentUser.fullName.match(/संभागीय संयुक्त संचालक कृषि (.*)/);
                    if (divisionMatch && divisionMatch[1]) {
                        const division = divisionMatch[1] + " संभाग";
                        return divisionToDistricts[division] || [];
                    }
                }
                return [];
            } catch (error) {
                console.error('Error getting user districts:', error);
                return [];
            }
        }

        // Function to populate district dropdowns
        function populateDistrictDropdowns() {
            const districtSelectors = [
                'districtSelector',
                'cropAssessmentDistrictFilter',
                'cropDistrictName',
                'officersTrainingDistrictFilter',
                'officerDistrictName'
            ];
            
            districtSelectors.forEach(selectorId => {
                const selector = document.getElementById(selectorId);
                if (selector) {
                    // Clear existing options except the first one
                    while (selector.options.length > 1) {
                        selector.remove(1);
                    }
                    
                    // Add user's allowed districts
                    userDistricts.forEach(district => {
                        const option = document.createElement('option');
                        option.value = district;
                        option.textContent = district;
                        selector.appendChild(option);
                    });
                }
            });
        }

        // Function to populate blocks based on selected district
        function populateBlocks(districtSelector, blockSelector) {
            const district = document.getElementById(districtSelector).value;
            const blockSelect = document.getElementById(blockSelector);
            
            // Clear existing options except the first one
            while (blockSelect.options.length > 1) {
                blockSelect.remove(1);
            }
            
            // Add blocks for the selected district
            if (district && districtsAndBlocks[district]) {
                districtsAndBlocks[district].forEach(block => {
                    const option = document.createElement('option');
                    option.value = block;
                    option.textContent = block;
                    blockSelect.appendChild(option);
                });
            }
        }

        // Function to format date for display
        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('hi-IN');
        }

        // Function to load crop assessment data
        async function loadCropAssessmentData() {
            try {
                let query = supabaseClient
                    .from('crop_assessment')
                    .select('*')
                    .order('created_at', { ascending: false });
                
                // Filter by selected district if any
                const selectedDistrict = document.getElementById('cropAssessmentDistrictFilter').value;
                if (selectedDistrict) {
                    query = query.eq('district_name', selectedDistrict);
                }
                
                // Filter by selected block if any
                const selectedBlock = document.getElementById('cropAssessmentBlockFilter').value;
                if (selectedBlock) {
                    query = query.eq('block_name', selectedBlock);
                }
                
                // Filter by date if selected
                const selectedDate = document.getElementById('cropAssessmentDateFilter').value;
                if (selectedDate) {
                    query = query.eq('assessment_date', selectedDate);
                }
                
                // Filter by user's allowed districts if not super_admin
                if (currentUser.role !== 'super_admin') {
                    query = query.in('district_name', userDistricts);
                }
                
                const { data, error } = await query;
                
                if (error) {
                    throw error;
                }
                
                // Update the DataTable
                if (cropAssessmentTable) {
                    cropAssessmentTable.clear();
                    
                    if (data) {
                        data.forEach((item, index) => {
                            cropAssessmentTable.row.add([
                                index + 1,
                                item.division_name,
                                item.district_name,
                                item.block_name,
                                item.village_name,
                                item.team_number,
                                formatDate(item.assessment_date),
                                item.total_crop_surveys,
                                item.completed_surveys,
                                `<div class="d-flex">
                                    <button class="action-btn view-btn view-crop" data-id="\${item.id}" title="देखें">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="action-btn edit-btn edit-crop" data-id="\${item.id}" title="संपादित करें">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete-btn delete-crop" data-id="\${item.id}" title="हटाएं">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>`
                            ]);
                        });
                    }
                    
                    cropAssessmentTable.draw();
                }
                
                // Update dashboard stats
                document.getElementById('totalCropAssessments').textContent = data ? data.length : 0;
                
            } catch (error) {
                console.error('Error loading crop assessment data:', error);
            }
        }

        // Function to load ground truth survey data
        async function loadGroundTruthData() {
            try {
                let query = supabaseClient
                    .from('ground_truth_survey')
                    .select('*')
                    .order('created_at', { ascending: false });
                
                // Filter by selected division if any
                const selectedDivision = document.getElementById('groundTruthDivisionFilter').value;
                if (selectedDivision) {
                    query = query.eq('division_name', selectedDivision);
                }
                
                // Filter by team number if any
                const selectedTeam = document.getElementById('groundTruthTeamFilter').value;
                if (selectedTeam) {
                    query = query.eq('team_number', selectedTeam);
                }
                
                // Filter by date if selected
                const selectedDate = document.getElementById('groundTruthDateFilter').value;
                if (selectedDate) {
                    query = query.eq('survey_date', selectedDate);
                }
                
                // Filter by user's division if not super_admin
                if (currentUser.role !== 'super_admin') {
                    // Get the division from the user's full name
                    const divisionMatch = currentUser.fullName.match(/संभागीय संयुक्त संचालक कृषि (.*)/);
                    if (divisionMatch && divisionMatch[1]) {
                        const division = divisionMatch[1] + " संभाग";
                        query = query.eq('division_name', division);
                    }
                }
                
                const { data, error } = await query;
                
                if (error) {
                    throw error;
                }
                
                // Update the DataTable
                if (groundTruthTable) {
                    groundTruthTable.clear();
                    
                    if (data) {
                        data.forEach((item, index) => {
                            groundTruthTable.row.add([
                                index + 1,
                                item.division_name,
                                item.team_number,
                                item.officer_names,
                                formatDate(item.survey_date),
                                item.total_surveys,
                                item.expenditure_amount,
                                item.total_amount_demanded,
                                item.completed_surveys,
                                `<div class="d-flex">
                                    <button class="action-btn view-btn view-ground-truth" data-id="\${item.id}" title="देखें">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="action-btn edit-btn edit-ground-truth" data-id="\${item.id}" title="संपादित करें">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete-btn delete-ground-truth" data-id="\${item.id}" title="हटाएं">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>`
                            ]);
                        });
                    }
                    
                    groundTruthTable.draw();
                }
                
                // Update dashboard stats
                document.getElementById('totalGroundTruthSurveys').textContent = data ? data.length : 0;
                
            } catch (error) {
                console.error('Error loading ground truth survey data:', error);
            }
        }

        // Function to load officers training data
        async function loadOfficersTrainingData() {
            try {
                let query = supabaseClient
                    .from('officers_training')
                    .select('*')
                    .order('created_at', { ascending: false });
                
                // Filter by selected district if any
                const selectedDistrict = document.getElementById('officersTrainingDistrictFilter').value;
                if (selectedDistrict) {
                    query = query.eq('district_name', selectedDistrict);
                }
                
                // Filter by selected block if any
                const selectedBlock = document.getElementById('officersTrainingBlockFilter').value;
                if (selectedBlock) {
                    query = query.eq('block_name', selectedBlock);
                }
                
                // Filter by status if selected
                const selectedStatus = document.getElementById('officersTrainingStatusFilter').value;
                if (selectedStatus) {
                    query = query.eq('training_status', selectedStatus);
                }
                
                // Filter by date if selected
                const selectedDate = document.getElementById('officersTrainingDateFilter').value;
                if (selectedDate) {
                    query = query.eq('training_date', selectedDate);
                }
                
                // Filter by user's allowed districts if not super_admin
                if (currentUser.role !== 'super_admin') {
                    query = query.in('district_name', userDistricts);
                }
                
                const { data, error } = await query;
                
                if (error) {
                    throw error;
                }
                
                // Update the DataTable
                if (officersTrainingTable) {
                    officersTrainingTable.clear();
                    
                    if (data) {
                        data.forEach((item, index) => {
                            // Translate training status
                            let trainingStatus = item.training_status;
                            if (trainingStatus === 'Pending') trainingStatus = 'लंबित';
                            else if (trainingStatus === 'Completed') trainingStatus = 'पूर्ण';
                            else if (trainingStatus === 'In Progress') trainingStatus = 'प्रगति में';
                            
                            officersTrainingTable.row.add([
                                index + 1,
                                item.officer_name,
                                item.designation,
                                item.district_name,
                                item.block_name,
                                item.mobile_number,
                                trainingStatus,
                                formatDate(item.training_date),
                                `<div class="d-flex">
                                    <button class="action-btn view-btn view-training" data-id="\${item.id}" title="देखें">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="action-btn edit-btn edit-training" data-id="\${item.id}" title="संपादित करें">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete-btn delete-training" data-id="\${item.id}" title="हटाएं">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>`
                            ]);
                        });
                    }
                    
                    officersTrainingTable.draw();
                }
                
                // Update dashboard stats
                document.getElementById('totalOfficersTrainings').textContent = data ? data.length : 0;
                
            } catch (error) {
                console.error('Error loading officers training data:', error);
            }
        }
// Function to load divisions
async function loadDivisions() {
    try {
        const { data, error } = await supabaseClient
            .from('divisions')
            .select('id, name')
            .order('name');
            
        if (error) throw error;
        
        return data || [];
    } catch (error) {
        console.error('Error loading divisions:', error);
        return [];
    }
}

// Function to load districts by division
async function loadDistrictsByDivision(divisionId) {
    try {
        const { data, error } = await supabaseClient
            .from('districts')
            .select('id, name')
            .eq('division_id', divisionId)
            .order('name');
            
        if (error) throw error;
        
        return data || [];
    } catch (error) {
        console.error('Error loading districts:', error);
        return [];
    }
}

// Function to load all districts
async function loadAllDistricts() {
    try {
        const { data, error } = await supabaseClient
            .from('districts')
            .select('id, name, division_id')
            .order('name');
            
        if (error) throw error;
        
        return data || [];
    } catch (error) {
        console.error('Error loading all districts:', error);
        return [];
    }
}

// Function to load blocks by district
async function loadBlocksByDistrict(districtId) {
    try {
        const { data, error } = await supabaseClient
            .from('blocks')
            .select('id, name')
            .eq('district_id', districtId)
            .order('name');
            
        if (error) throw error;
        
        return data || [];
    } catch (error) {
        console.error('Error loading blocks:', error);
        return [];
    }
}

// Modified function to populate district dropdowns
async function populateDistrictDropdowns() {
    try {
        // Get all districts that the user is allowed to access
        let districts = [];
        
        if (currentUser.role === 'super_admin') {
            // Super admin can access all districts
            districts = await loadAllDistricts();
        } else if (currentUser.role === 'division_admin') {
            // Get the division from the user's full name
            const divisionMatch = currentUser.fullName.match(/संभागीय संयुक्त संचालक कृषि (.*)/);
            if (divisionMatch && divisionMatch[1]) {
                const divisionName = divisionMatch[1] + " संभाग";
                
                // Find division ID by name
                const divisions = await loadDivisions();
                const division = divisions.find(d => d.name === divisionName);
                
                if (division) {
                    // Get districts for this division
                    districts = await loadDistrictsByDivision(division.id);
                }
            }
        }
        
        // Store user districts for later use
        userDistricts = districts.map(district => district.name);
        
        // Populate all district dropdowns
        const districtSelectors = [
            'districtSelector',
            'cropAssessmentDistrictFilter',
            'cropDistrictName',
            'officersTrainingDistrictFilter',
            'officerDistrictName'
        ];
        
        districtSelectors.forEach(selectorId => {
            const selector = document.getElementById(selectorId);
            if (selector) {
                // Clear existing options except the first one
                while (selector.options.length > 1) {
                    selector.remove(1);
                }
                
                // Add user's allowed districts
                districts.forEach(district => {
                    const option = document.createElement('option');
                    option.value = district.id;
                    option.textContent = district.name;
                    option.dataset.districtId = district.id;
                    selector.appendChild(option);
                });
            }
        });
    } catch (error) {
        console.error('Error populating district dropdowns:', error);
    }
}

// Modified function to populate blocks based on selected district
async function populateBlocks(districtSelector, blockSelector) {
    try {
        const districtSelect = document.getElementById(districtSelector);
        const blockSelect = document.getElementById(blockSelector);
        const districtId = districtSelect.value;
        
        // Clear existing options except the first one
        while (blockSelect.options.length > 1) {
            blockSelect.remove(1);
        }
        
        if (districtId) {
            // Load blocks for the selected district
            const blocks = await loadBlocksByDistrict(districtId);
            
            // Add blocks to the dropdown
            blocks.forEach(block => {
                const option = document.createElement('option');
                option.value = block.id;
                option.textContent = block.name;
                blockSelect.appendChild(option);
            });
        }
    } catch (error) {
        console.error('Error populating blocks:', error);
    }
}

// Update the saveCropAssessment function to use IDs
async function saveCropAssessment() {
    try {
        const cropAssessmentId = document.getElementById('cropAssessmentId').value;
        const divisionName = document.getElementById('cropDivisionName').value;
        const teamNumber = document.getElementById('cropTeamNumber').value;
        const officerNames = document.getElementById('cropOfficerNames').value;
        const districtId = document.getElementById('cropDistrictName').value;
        const blockId = document.getElementById('cropBlockName').value;
        const villageName = document.getElementById('cropVillageName').value;
        const irrigationStatus = document.getElementById('cropIrrigationStatus').value;
        const totalSurveys = document.getElementById('cropTotalSurveys').value;
        const completedSurveys = document.getElementById('cropCompletedSurveys').value;
        const assessmentDate = document.getElementById('cropAssessmentDate').value;
        const remarks = document.getElementById('cropRemarks').value;
        
        // Get district and block names for display purposes
        const districtSelect = document.getElementById('cropDistrictName');
        const blockSelect = document.getElementById('cropBlockName');
        const districtName = districtSelect.options[districtSelect.selectedIndex].textContent;
        const blockName = blockSelect.options[blockSelect.selectedIndex].textContent;
        
        // Validate required fields
        if (!divisionName || !teamNumber || !officerNames || !districtId || !blockId || 
            !villageName || !irrigationStatus || !totalSurveys || !completedSurveys || !assessmentDate) {
            showAlert(document.getElementById('cropAssessmentAlert'), 'कृपया सभी आवश्यक फ़ील्ड भरें', 'danger');
            return;
        }
        
        // Create data object
        const cropData = {
            division_name: divisionName,
            team_number: parseInt(teamNumber),
            officer_names: officerNames,
            district_id: districtId,
            district_name: districtName, // Store name for display
            block_id: blockId,
            block_name: blockName, // Store name for display
            village_name: villageName,
            crop_irrigation_status: irrigationStatus,
            total_crop_surveys: parseInt(totalSurveys),
            completed_surveys: parseInt(completedSurveys),
            assessment_date: assessmentDate,
            remarks: remarks,
            updated_at: new Date().toISOString()
        };
        
        // Similar modifications would be needed for other save functions
        // ...rest of the function remains the same
    } catch (error) {
        console.error('Error saving crop assessment:', error);
        showAlert(document.getElementById('cropAssessmentAlert'), 'फसल आकलन सहेजने में त्रुटि', 'danger');
    }
}

        // Function to load recent activities
        async function loadRecentActivities() {
            try {
                const activities = [];
                
                // Get recent crop assessments
                let cropQuery = supabaseClient
                    .from('crop_assessment')
                    .select('district_name, village_name, assessment_date, created_at')
                    .order('created_at', { ascending: false })
                    .limit(3);
                
                // Filter by user's allowed districts if not super_admin
                if (currentUser.role !== 'super_admin') {
                    cropQuery = cropQuery.in('district_name', userDistricts);
                }
                
                const { data: cropData } = await cropQuery;
                    
                if (cropData) {
                    cropData.forEach(item => {
                        activities.push({
                            type: 'crop',
                            title: `${item.district_name} में नया फसल आकलन`,
                            description: `${item.village_name} गांव में फसल आकलन किया गया`,
                            date: new Date(item.created_at)
                        });
                    });
                }
                
                // Get recent ground truth surveys
                let groundTruthQuery = supabaseClient
                    .from('ground_truth_survey')
                    .select('division_name, team_number, survey_date, created_at')
                    .order('created_at', { ascending: false })
                    .limit(3);
                
                // Filter by user's division if not super_admin
                if (currentUser.role !== 'super_admin') {
                    // Get the division from the user's full name
                    const divisionMatch = currentUser.fullName.match(/संभागीय संयुक्त संचालक कृषि (.*)/);
                    if (divisionMatch && divisionMatch[1]) {
                        const division = divisionMatch[1] + " संभाग";
                        groundTruthQuery = groundTruthQuery.eq('division_name', division);
                    }
                }
                
                const { data: groundTruthData } = await groundTruthQuery;
                    
                if (groundTruthData) {
                    groundTruthData.forEach(item => {
                        activities.push({
                            type: 'ground-truth',
                            title: `${item.division_name} में नया सर्वेक्षण`,
                            description: `टीम ${item.team_number} द्वारा ग्राउंड ट्रुथ सर्वेक्षण किया गया`,
                            date: new Date(item.created_at)
                        });
                    });
                }
                
                // Get recent officer trainings
                let trainingQuery = supabaseClient
                    .from('officers_training')
                    .select('officer_name, district_name, training_status, created_at')
                    .order('created_at', { ascending: false })
                    .limit(3);
                
                // Filter by user's allowed districts if not super_admin
                if (currentUser.role !== 'super_admin') {
                    trainingQuery = trainingQuery.in('district_name', userDistricts);
                }
                
                const { data: trainingData } = await trainingQuery;
                    
                if (trainingData) {
                    trainingData.forEach(item => {
                        let status = item.training_status;
                        if (status === 'Pending') status = 'लंबित';
                        else if (status === 'Completed') status = 'पूर्ण';
                        else if (status === 'In Progress') status = 'प्रगति में';
                        
                        activities.push({
                            type: 'training',
                            title: `${item.officer_name} का प्रशिक्षण ${status}`,
                            description: `\${item.district_name} में अधिकारी प्रशिक्षण अपडेट किया गया`,
                            date: new Date(item.created_at)
                        });
                    });
                }
                
                // Sort by date
                activities.sort((a, b) => b.date - a.date);
                
                // Display in recent activities list
                const recentActivitiesList = document.getElementById('recentActivitiesList');
                recentActivitiesList.innerHTML = '';
                
                activities.slice(0, 5).forEach(activity => {
                    let icon;
                    if (activity.type === 'crop') icon = 'seedling';
                    else if (activity.type === 'ground-truth') icon = 'map-marked-alt';
                    else icon = 'user-tie';
                    
                    const li = document.createElement('li');
                    li.className = 'list-group-item';
                    li.innerHTML = `
                        <div class="d-flex align-items-center">
                            <div class="me-3" style="width: 40px; height: 40px; border-radius: 50%; background-color: var(--background-medium); display: flex; align-items: center; justify-content: center; color: var(--primary-color);">
                                <i class="fas fa-\${icon}"></i>
                            </div>
                            <div>
                                <div class="fw-bold">\${activity.title}</div>
                                <div class="text-muted small">\${activity.description}</div>
                                <div class="text-muted small">\${formatDate(activity.date)}</div>
                            </div>
                        </div>
                    `;
                    recentActivitiesList.appendChild(li);
                });
                
                if (activities.length === 0) {
                    const li = document.createElement('li');
                    li.className = 'list-group-item text-center text-muted';
                    li.textContent = 'कोई हालिया गतिविधि नहीं';
                    recentActivitiesList.appendChild(li);
                }
                
            } catch (error) {
                console.error('Error loading recent activities:', error);
            }
        }

        // Function to get crop assessment by ID
        async function getCropAssessmentById(id) {
            try {
                const { data, error } = await supabaseClient
                    .from('crop_assessment')
                    .select('*')
                    .eq('id', id)
                    .single();
                    
                if (error) throw error;
                
                return data;
            } catch (error) {
                console.error('Error getting crop assessment:', error);
                return null;
            }
        }

        // Function to get ground truth survey by ID
        async function getGroundTruthById(id) {
            try {
                const { data, error } = await supabaseClient
                    .from('ground_truth_survey')
                    .select('*')
                    .eq('id', id)
                    .single();
                    
                if (error) throw error;
                
                return data;
            } catch (error) {
                console.error('Error getting ground truth survey:', error);
                return null;
            }
        }

        // Function to get officers training by ID
        async function getOfficersTrainingById(id) {
            try {
                const { data, error } = await supabaseClient
                    .from('officers_training')
                    .select('*')
                    .eq('id', id)
                    .single();
                    
                if (error) throw error;
                
                return data;
            } catch (error) {
                console.error('Error getting officers training:', error);
                return null;
            }
        }

        // Function to save crop assessment
        async function saveCropAssessment() {
            try {
                const cropAssessmentId = document.getElementById('cropAssessmentId').value;
                const divisionName = document.getElementById('cropDivisionName').value;
                const teamNumber = document.getElementById('cropTeamNumber').value;
                const officerNames = document.getElementById('cropOfficerNames').value;
                const districtName = document.getElementById('cropDistrictName').value;
                const blockName = document.getElementById('cropBlockName').value;
                const villageName = document.getElementById('cropVillageName').value;
                const irrigationStatus = document.getElementById('cropIrrigationStatus').value;
                const totalSurveys = document.getElementById('cropTotalSurveys').value;
                const completedSurveys = document.getElementById('cropCompletedSurveys').value;
                const assessmentDate = document.getElementById('cropAssessmentDate').value;
                const remarks = document.getElementById('cropRemarks').value;
                
                // Validate required fields
                if (!divisionName || !teamNumber || !officerNames || !districtName || !blockName || 
                    !villageName || !irrigationStatus || !totalSurveys || !completedSurveys || !assessmentDate) {
                    showAlert(document.getElementById('cropAssessmentAlert'), 'कृपया सभी आवश्यक फ़ील्ड भरें', 'danger');
                    return;
                }
                
                // Create data object
                const cropData = {
                    division_name: divisionName,
                    team_number: parseInt(teamNumber),
                    officer_names: officerNames,
                    district_name: districtName,
                    block_name: blockName,
                    village_name: villageName,
                    crop_irrigation_status: irrigationStatus,
                    total_crop_surveys: parseInt(totalSurveys),
                    completed_surveys: parseInt(completedSurveys),
                    assessment_date: assessmentDate,
                    remarks: remarks,
                    updated_at: new Date().toISOString()
                };
                
                let result;
                
                if (cropAssessmentId) {
                    // Update existing record
                    result = await supabaseClient
                        .from('crop_assessment')
                        .update(cropData)
                        .eq('id', cropAssessmentId);
                } else {
                    // Insert new record
                    result = await supabaseClient
                        .from('crop_assessment')
                        .insert(cropData);
                }
                
                if (result.error) {
                    throw result.error;
                }
                
                // Show success message
                showAlert(document.getElementById('cropAssessmentAlert'), 'फसल आकलन सफलतापूर्वक सहेजा गया', 'success');
                
                // Reset form and close modal after delay
                setTimeout(() => {
                    document.getElementById('cropAssessmentForm').reset();
                    document.getElementById('cropAssessmentId').value = '';
                    $('#cropAssessmentModal').modal('hide');
                    loadCropAssessmentData();
                    loadRecentActivities();
                }, 1000);
                
            } catch (error) {
                console.error('Error saving crop assessment:', error);
                showAlert(document.getElementById('cropAssessmentAlert'), 'फसल आकलन सहेजने में त्रुटि', 'danger');
            }
        }

        // Function to save ground truth survey
        async function saveGroundTruthSurvey() {
            try {
                const groundTruthId = document.getElementById('groundTruthId').value;
                const divisionName = document.getElementById('groundTruthDivisionName').value;
                const teamNumber = document.getElementById('groundTruthTeamNumber').value;
                const officerNames = document.getElementById('groundTruthOfficerNames').value;
                const surveyDate = document.getElementById('groundTruthSurveyDate').value;
                const totalSurveys = document.getElementById('groundTruthTotalSurveys').value;
                const expenditureAmount = document.getElementById('groundTruthExpenditureAmount').value;
                const totalAmountDemanded = document.getElementById('groundTruthTotalAmountDemanded').value;
                const totalCropSurveys = document.getElementById('groundTruthTotalCropSurveys').value;
                const completedSurveys = document.getElementById('groundTruthCompletedSurveys').value;
                const remarks = document.getElementById('groundTruthRemarks').value;
                
                // Validate required fields
                if (!divisionName || !teamNumber || !officerNames || !surveyDate || !totalSurveys || 
                    !expenditureAmount || !totalAmountDemanded || !totalCropSurveys || !completedSurveys) {
                    showAlert(document.getElementById('groundTruthAlert'), 'कृपया सभी आवश्यक फ़ील्ड भरें', 'danger');
                    return;
                }
                
                // Create data object
                const groundTruthData = {
                    division_name: divisionName,
                    team_number: parseInt(teamNumber),
                    officer_names: officerNames,
                    survey_date: surveyDate,
                    total_surveys: parseInt(totalSurveys),
                    expenditure_amount: parseFloat(expenditureAmount),
                    total_amount_demanded: parseFloat(totalAmountDemanded),
                    total_crop_surveys: parseInt(totalCropSurveys),
                    completed_surveys: parseInt(completedSurveys),
                    remarks: remarks,
                    updated_at: new Date().toISOString()
                };
                
                let result;
                
                if (groundTruthId) {
                    // Update existing record
                    result = await supabaseClient
                        .from('ground_truth_survey')
                        .update(groundTruthData)
                        .eq('id', groundTruthId);
                } else {
                    // Insert new record
                    result = await supabaseClient
                        .from('ground_truth_survey')
                        .insert(groundTruthData);
                }
                
                if (result.error) {
                    throw result.error;
                }
                
                // Show success message
                showAlert(document.getElementById('groundTruthAlert'), 'ग्राउंड ट्रुथ सर्वेक्षण सफलतापूर्वक सहेजा गया', 'success');
                
                // Reset form and close modal after delay
                setTimeout(() => {
                    document.getElementById('groundTruthForm').reset();
                    document.getElementById('groundTruthId').value = '';
                    $('#groundTruthModal').modal('hide');
                    loadGroundTruthData();
                    loadRecentActivities();
                }, 1000);
                
            } catch (error) {
                console.error('Error saving ground truth survey:', error);
                showAlert(document.getElementById('groundTruthAlert'), 'ग्राउंड ट्रुथ सर्वेक्षण सहेजने में त्रुटि', 'danger');
            }
        }

        // Function to save officers training
        async function saveOfficersTraining() {
            try {
                const trainingId = document.getElementById('officersTrainingId').value;
                const officerName = document.getElementById('officerName').value;
                const designation = document.getElementById('officerDesignation').value;
                const districtName = document.getElementById('officerDistrictName').value;
                const blockName = document.getElementById('officerBlockName').value;
                const mobileNumber = document.getElementById('officerMobileNumber').value;
                const email = document.getElementById('officerEmail').value;
                const trainingStatus = document.getElementById('officerTrainingStatus').value;
                const trainingDate = document.getElementById('officerTrainingDate').value;
                const remarks = document.getElementById('officerRemarks').value;
                
                // Validate required fields
                if (!officerName || !designation || !districtName || !blockName || !mobileNumber) {
                    showAlert(document.getElementById('officersTrainingAlert'), 'कृपया सभी आवश्यक फ़ील्ड भरें', 'danger');
                    return;
                }
                
                // Create data object
                const trainingData = {
                    officer_name: officerName,
                    designation: designation,
                    district_name: districtName,
                    block_name: blockName,
                    mobile_number: mobileNumber,
                    email: email,
                    training_status: trainingStatus,
                    training_date: trainingDate,
                    remarks: remarks,
                    updated_at: new Date().toISOString()
                };
                
                let result;
                
                if (trainingId) {
                    // Update existing record
                    result = await supabaseClient
                        .from('officers_training')
                        .update(trainingData)
                        .eq('id', trainingId);
                } else {
                    // Insert new record
                    result = await supabaseClient
                        .from('officers_training')
                        .insert(trainingData);
                }
                
                if (result.error) {
                    throw result.error;
                }
                
                // Show success message
                showAlert(document.getElementById('officersTrainingAlert'), 'अधिकारी प्रशिक्षण सफलतापूर्वक सहेजा गया', 'success');
                
                // Reset form and close modal after delay
                setTimeout(() => {
                    document.getElementById('officersTrainingForm').reset();
                    document.getElementById('officersTrainingId').value = '';
                    $('#officersTrainingModal').modal('hide');
                    loadOfficersTrainingData();
                    loadRecentActivities();
                }, 1000);
                
            } catch (error) {
                console.error('Error saving officers training:', error);
                showAlert(document.getElementById('officersTrainingAlert'), 'अधिकारी प्रशिक्षण सहेजने में त्रुटि', 'danger');
            }
        }

        // Function to update user profile
        async function updateProfile() {
            try {
                const fullName = document.getElementById('editFullName').value;
                const mobileNumber = document.getElementById('editMobileNumber').value;
                const email = document.getElementById('editEmail').value;
                
                if (!fullName) {
                    showAlert(document.getElementById('editProfileAlert'), 'कृपया पूरा नाम दर्ज करें', 'danger');
                    return;
                }
                
                // Update user profile
                const { error } = await supabaseClient
                    .from('test_users')
                    .update({
                        full_name: fullName,
                        mobile_number: mobileNumber,
                        email: email,
                        updated_at: new Date().toISOString()
                    })
                    .eq('id', currentUser.id);
                
                if (error) throw error;
                
                // Update current user object
                currentUser.fullName = fullName;
                currentUser.mobileNumber = mobileNumber;
                currentUser.email = email;
                
                // Update localStorage/sessionStorage
                if (localStorage.getItem('user')) {
                    localStorage.setItem('user', JSON.stringify(currentUser));
                } else {
                    sessionStorage.setItem('user', JSON.stringify(currentUser));
                }
                
                // Update UI
                document.getElementById('userNameDisplay').textContent = currentUser.username;
                document.getElementById('welcomeMessage').textContent = `स्वागत है, ${currentUser.fullName}!`;
                
                // Update profile display
                document.getElementById('profileFullName').textContent = fullName;
                document.getElementById('profileMobile').textContent = mobileNumber || '-';
                document.getElementById('profileEmail').textContent = email || '-';
                
                // Show success message
                showAlert(document.getElementById('editProfileAlert'), 'प्रोफ़ाइल सफलतापूर्वक अपडेट की गई', 'success');
                
                // Close modal after delay
                setTimeout(() => {
                    $('#editProfileModal').modal('hide');
                }, 1000);
                
                // Also show success message in profile section
                showAlert(document.getElementById('profileAlert'), 'प्रोफ़ाइल सफलतापूर्वक अपडेट की गई', 'success');
                
            } catch (error) {
                console.error('Error updating profile:', error);
                showAlert(document.getElementById('editProfileAlert'), 'प्रोफ़ाइल अपडेट करने में त्रुटि', 'danger');
            }
        }

        // Function to change password
        async function changePassword() {
            try {
                const currentPassword = document.getElementById('currentPassword').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;
                
                if (!currentPassword || !newPassword || !confirmPassword) {
                    showAlert(document.getElementById('changePasswordAlert'), 'कृपया सभी फ़ील्ड भरें', 'danger');
                    return;
                }
                
                if (newPassword !== confirmPassword) {
                    showAlert(document.getElementById('changePasswordAlert'), 'नया पासवर्ड और पुष्टिकरण पासवर्ड मेल नहीं खाते', 'danger');
                    return;
                }
                
                // Hash passwords
                const hashedCurrentPassword = await hashPassword(currentPassword);
                const hashedNewPassword = await hashPassword(newPassword);
                
                // Verify current password
                const { data, error: verifyError } = await supabaseClient
                    .from('test_users')
                    .select('id')
                    .eq('id', currentUser.id)
                    .eq('password_hash', hashedCurrentPassword)
                    .single();
                
                if (verifyError || !data) {
                    showAlert(document.getElementById('changePasswordAlert'), 'वर्तमान पासवर्ड गलत है', 'danger');
                    return;
                }
                
                // Update password
                const { error: updateError } = await supabaseClient
                    .from('test_users')
                    .update({ 
                        password_hash: hashedNewPassword,
                        updated_at: new Date().toISOString()
                    })
                    .eq('id', currentUser.id);
                
                if (updateError) throw updateError;
                
                // Show success message
                showAlert(document.getElementById('changePasswordAlert'), 'पासवर्ड सफलतापूर्वक बदल दिया गया है', 'success');
                
                // Clear form
                document.getElementById('currentPassword').value = '';
                document.getElementById('newPassword').value = '';
                document.getElementById('confirmPassword').value = '';
                
                // Close modal after delay
                setTimeout(() => {
                    $('#changePasswordModal').modal('hide');
                }, 1000);
                
            } catch (error) {
                console.error('Error changing password:', error);
                showAlert(document.getElementById('changePasswordAlert'), 'पासवर्ड बदलने में त्रुटि', 'danger');
            }
        }

        // Function to delete a record
        async function deleteRecord(type, id) {
            try {
                let tableName;
                
                if (type === 'crop') {
                    tableName = 'crop_assessment';
                } else if (type === 'ground-truth') {
                    tableName = 'ground_truth_survey';
                } else if (type === 'training') {
                    tableName = 'officers_training';
                } else {
                    throw new Error('Invalid record type');
                }
                
                const { error } = await supabaseClient
                    .from(tableName)
                    .delete()
                    .eq('id', id);
                    
                if (error) throw error;
                
                // Reload data based on type
                if (type === 'crop') {
                    loadCropAssessmentData();
                } else if (type === 'ground-truth') {
                    loadGroundTruthData();
                } else if (type === 'training') {
                    loadOfficersTrainingData();
                }
                
                // Also reload activities
                loadRecentActivities();
                
            } catch (error) {
                console.error('Error deleting record:', error);
                alert('रिकॉर्ड हटाने में त्रुटि');
            }
        }

        // Function to hash password
        async function hashPassword(password) {
            const encoder = new TextEncoder();
            const data = encoder.encode(password);
            const hashBuffer = await crypto.subtle.digest('SHA-256', data);
            const hashArray = Array.from(new Uint8Array(hashBuffer));
            return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
        }

        // Initialize the dashboard
        async function initDashboard() {
            try {
                // Check if user is logged in
                const userData = localStorage.getItem('user') || sessionStorage.getItem('user');
                
                if (!userData) {
                    // Redirect to login page if not logged in
                    window.location.href = 'login.html';
                    return;
                }
                
                currentUser = JSON.parse(userData);
                
                // Get user's allowed districts
                userDistricts = await getUserDistricts();
                
                // Populate district dropdowns
                populateDistrictDropdowns();
                
                // Initialize Select2 for dropdowns
                $('.form-select').select2({
                    width: '100%',
                    placeholder: "चुनें...",
                    allowClear: true
                });
                
                // Initialize DataTables
                cropAssessmentTable = $('#cropAssessmentTable').DataTable({
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/hi.json'
                    },
                    responsive: true
                });
                
                groundTruthTable = $('#groundTruthTable').DataTable({
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/hi.json'
                    },
                    responsive: true
                });
                
                officersTrainingTable = $('#officersTrainingTable').DataTable({
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/hi.json'
                    },
                    responsive: true
                });
                
                // Load initial data
                loadCropAssessmentData();
                loadGroundTruthData();
                loadOfficersTrainingData();
                loadRecentActivities();
                
                // Set welcome message and user info
                document.getElementById('welcomeMessage').textContent = `स्वागत है, ${currentUser.fullName}!`;
                document.getElementById('userNameDisplay').textContent = currentUser.username;
                
                // Populate profile section
                document.getElementById('profileUsername').textContent = currentUser.username;
                document.getElementById('profileFullName').textContent = currentUser.fullName;
                document.getElementById('profileRole').textContent = currentUser.role === 'super_admin' ? 'मुख्य प्रशासक' : 'संभागीय प्रशासक';
                document.getElementById('profileMobile').textContent = currentUser.mobileNumber || '-';
                document.getElementById('profileEmail').textContent = currentUser.email || '-';
                document.getElementById('profileLastLogin').textContent = currentUser.last_login ? formatDate(currentUser.last_login) : '-';
                
                // Populate edit profile form
                document.getElementById('editUsername').value = currentUser.username;
                document.getElementById('editFullName').value = currentUser.fullName;
                document.getElementById('editMobileNumber').value = currentUser.mobileNumber || '';
                document.getElementById('editEmail').value = currentUser.email || '';
                
                // Setup event listeners for navigation
                document.querySelectorAll('.sidebar-link').forEach(link => {
                    link.addEventListener('click', function(e) {
                        e.preventDefault();
                        
                        // Get section to display
                        const section = this.getAttribute('data-section');
                        
                        // Remove active class from all links
                        document.querySelectorAll('.sidebar-link').forEach(l => l.classList.remove('active'));
                        
                        // Add active class to clicked link
                        this.classList.add('active');
                        
                        // Hide all sections
                        document.querySelectorAll('.content-section').forEach(s => s.style.display = 'none');
                        
                        // Show the selected section
                        document.getElementById(`\${section}-section`).style.display = 'block';
                    });
                });
                
                // Setup event listeners for district changes
                document.getElementById('cropDistrictName').addEventListener('change', function() {
                    populateBlocks('cropDistrictName', 'cropBlockName');
                });
                
                document.getElementById('officerDistrictName').addEventListener('change', function() {
                    populateBlocks('officerDistrictName', 'officerBlockName');
                });
                
                // Setup event listeners for filter buttons
                document.getElementById('cropAssessmentFilterBtn').addEventListener('click', loadCropAssessmentData);
                document.getElementById('groundTruthFilterBtn').addEventListener('click', loadGroundTruthData);
                document.getElementById('officersTrainingFilterBtn').addEventListener('click', loadOfficersTrainingData);
                
                // Setup event listeners for save buttons
                document.getElementById('saveCropAssessmentBtn').addEventListener('click', saveCropAssessment);
                document.getElementById('saveGroundTruthBtn').addEventListener('click', saveGroundTruthSurvey);
                document.getElementById('saveOfficersTrainingBtn').addEventListener('click', saveOfficersTraining);
                document.getElementById('saveProfileBtn').addEventListener('click', updateProfile);
                document.getElementById('changePasswordBtn').addEventListener('click', changePassword);
                
                // Setup event listeners for edit/delete buttons (using event delegation)
                document.addEventListener('click', async function(e) {
                    // Edit crop assessment
                    if (e.target.closest('.edit-crop')) {
                        const id = e.target.closest('.edit-crop').getAttribute('data-id');
                        const cropData = await getCropAssessmentById(id);
                        
                        if (cropData) {
                            document.getElementById('cropAssessmentId').value = cropData.id;
                            document.getElementById('cropDivisionName').value = cropData.division_name;
                            document.getElementById('cropTeamNumber').value = cropData.team_number;
                            document.getElementById('cropOfficerNames').value = cropData.officer_names;
                            document.getElementById('cropDistrictName').value = cropData.district_name;
                            
                            // Trigger change event to populate blocks
                            \$('#cropDistrictName').trigger('change');
                            
                            setTimeout(() => {
                                document.getElementById('cropBlockName').value = cropData.block_name;
                                \$('#cropBlockName').trigger('change');
                            }, 500);
                            
                            document.getElementById('cropVillageName').value = cropData.village_name;
                            document.getElementById('cropIrrigationStatus').value = cropData.crop_irrigation_status;
                            document.getElementById('cropTotalSurveys').value = cropData.total_crop_surveys;
                            document.getElementById('cropCompletedSurveys').value = cropData.completed_surveys;
                            document.getElementById('cropAssessmentDate').value = cropData.assessment_date;
                            document.getElementById('cropRemarks').value = cropData.remarks || '';
                            
                            // Update modal title
                            document.getElementById('cropAssessmentModalLabel').textContent = 'फसल आकलन संपादित करें';
                            
                            // Show modal
                            $('#cropAssessmentModal').modal('show');
                        }
                    }
                    
                    // Edit ground truth survey
                    if (e.target.closest('.edit-ground-truth')) {
                        const id = e.target.closest('.edit-ground-truth').getAttribute('data-id');
                        const groundTruthData = await getGroundTruthById(id);
                        
                        if (groundTruthData) {
                            document.getElementById('groundTruthId').value = groundTruthData.id;
                            document.getElementById('groundTruthDivisionName').value = groundTruthData.division_name;
                            document.getElementById('groundTruthTeamNumber').value = groundTruthData.team_number;
                            document.getElementById('groundTruthOfficerNames').value = groundTruthData.officer_names;
                            document.getElementById('groundTruthSurveyDate').value = groundTruthData.survey_date;
                            document.getElementById('groundTruthTotalSurveys').value = groundTruthData.total_surveys;
                            document.getElementById('groundTruthExpenditureAmount').value = groundTruthData.expenditure_amount;
                            document.getElementById('groundTruthTotalAmountDemanded').value = groundTruthData.total_amount_demanded;
                            document.getElementById('groundTruthTotalCropSurveys').value = groundTruthData.total_crop_surveys;
                            document.getElementById('groundTruthCompletedSurveys').value = groundTruthData.completed_surveys;
                            document.getElementById('groundTruthRemarks').value = groundTruthData.remarks || '';
                            
                            // Update modal title
                            document.getElementById('groundTruthModalLabel').textContent = 'ग्राउंड ट्रुथ सर्वेक्षण संपादित करें';
                            
                            // Show modal
                            $('#groundTruthModal').modal('show');
                        }
                    }
                    
                    // Edit officers training
                    if (e.target.closest('.edit-training')) {
                        const id = e.target.closest('.edit-training').getAttribute('data-id');
                        const trainingData = await getOfficersTrainingById(id);
                        
                        if (trainingData) {
                            document.getElementById('officersTrainingId').value = trainingData.id;
                            document.getElementById('officerName').value = trainingData.officer_name;
                            document.getElementById('officerDesignation').value = trainingData.designation;
                            document.getElementById('officerDistrictName').value = trainingData.district_name;
                            
                            // Trigger change event to populate blocks
                            $('#officerDistrictName').trigger('change');
                            
                            setTimeout(() => {
                                document.getElementById('officerBlockName').value = trainingData.block_name;
                                $('#officerBlockName').trigger('change');
                            }, 500);
                            
                            document.getElementById('officerMobileNumber').value = trainingData.mobile_number;
                            document.getElementById('officerEmail').value = trainingData.email || '';
                            document.getElementById('officerTrainingStatus').value = trainingData.training_status;
                            document.getElementById('officerTrainingDate').value = trainingData.training_date || '';
                            document.getElementById('officerRemarks').value = trainingData.remarks || '';
                            
                            // Update modal title
                            document.getElementById('officersTrainingModalLabel').textContent = 'अधिकारी प्रशिक्षण संपादित करें';
                            
                            // Show modal
                            $('#officersTrainingModal').modal('show');
                        }
                    }
                    
                    // Delete record
                    if (e.target.closest('.delete-crop, .delete-ground-truth, .delete-training')) {
                        const deleteBtn = e.target.closest('.delete-crop, .delete-ground-truth, .delete-training');
                        const id = deleteBtn.getAttribute('data-id');
                        let type;
                        
                        if (deleteBtn.classList.contains('delete-crop')) {
                            type = 'crop';
                        } else if (deleteBtn.classList.contains('delete-ground-truth')) {
                            type = 'ground-truth';
                        } else {
                            type = 'training';
                        }
                        
                        // Set delete confirmation modal values
                        document.getElementById('deleteRecordId').value = id;
                        document.getElementById('deleteRecordType').value = type;
                        
                        // Show confirmation modal
                        $('#deleteConfirmModal').modal('show');
                    }
                });
                
                // Setup confirm delete button
                document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
                    const id = document.getElementById('deleteRecordId').value;
                    const type = document.getElementById('deleteRecordType').value;
                    
                    // Close modal
                    $('#deleteConfirmModal').modal('hide');
                    
                    // Delete the record
                    deleteRecord(type, id);
                });
                
                // Setup logout button
                document.getElementById('logoutBtn').addEventListener('click', function() {
                    localStorage.removeItem('user');
                    sessionStorage.removeItem('user');
                    window.location.href = 'login.html';
                });
                
                // Setup modal reset on close
                $('#cropAssessmentModal').on('hidden.bs.modal', function () {
                    document.getElementById('cropAssessmentForm').reset();
                    document.getElementById('cropAssessmentId').value = '';
                    document.getElementById('cropAssessmentAlert').style.display = 'none';
                    document.getElementById('cropAssessmentModalLabel').textContent = 'नया फसल आकलन';
                });
                
                $('#groundTruthModal').on('hidden.bs.modal', function () {
                    document.getElementById('groundTruthForm').reset();
                    document.getElementById('groundTruthId').value = '';
                    document.getElementById('groundTruthAlert').style.display = 'none';
                    document.getElementById('groundTruthModalLabel').textContent = 'नया ग्राउंड ट्रुथ सर्वेक्षण';
                });
                
                $('#officersTrainingModal').on('hidden.bs.modal', function () {
                    document.getElementById('officersTrainingForm').reset();
                    document.getElementById('officersTrainingId').value = '';
                    document.getElementById('officersTrainingAlert').style.display = 'none';
                    document.getElementById('officersTrainingModalLabel').textContent = 'नया अधिकारी प्रशिक्षण';
                });
                
                $('#editProfileModal').on('hidden.bs.modal', function () {
                    document.getElementById('editProfileAlert').style.display = 'none';
                });
                
                $('#changePasswordModal').on('hidden.bs.modal', function () {
                    document.getElementById('changePasswordForm').reset();
                    document.getElementById('changePasswordAlert').style.display = 'none';
                });
                
                // Auto-hide welcome alert after 5 seconds
                setTimeout(() => {
                    const welcomeAlert = document.getElementById('welcomeAlert');
                    if (welcomeAlert) {
                        welcomeAlert.style.display = 'none';
                    }
                }, 5000);
                
            } catch (error) {
                console.error('Error initializing dashboard:', error);
            }
        }

        // Initialize dashboard when document is ready
        $(document).ready(function() {
            initDashboard();
        });
    </script>
<script>
  // Direct fix for sidebar navigation
  document.addEventListener('DOMContentLoaded', function() {
    // Get all sidebar links
    var sidebarLinks = document.querySelectorAll('.sidebar-link');
    
    // Add click handler to each link
    sidebarLinks.forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Get the section to show
        var section = this.getAttribute('data-section');
        
        // Hide all sections
        document.querySelectorAll('.content-section').forEach(function(s) {
          s.style.display = 'none';
        });
        
        // Show the selected section
        document.getElementById(section + '-section').style.display = 'block';
        
        // Update active state
        sidebarLinks.forEach(function(l) {
          l.classList.remove('active');
        });
        this.classList.add('active');
      });
    });
  });
</script>

</body>
</html>


                
